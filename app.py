import streamlit as st
import os

# Set tab name and icon
st.set_page_config(page_title="‡∞™‡∞≤‡±ç‡∞≤‡±Ü ‡∞Æ‡∞æ‡∞ü‡∞≤‡±Å", page_icon="üåæ", layout="wide")

# Initialize session state
for key in ["page", "name", "place", "type", "answer", "feedback_given"]:
    if key not in st.session_state:
        st.session_state[key] = ""

if "page_number" not in st.session_state:
    st.session_state.page_number = 0

# Helper to go pages
def next_page():
    st.session_state.page_number += 1

def prev_page():
    if st.session_state.page_number > 0:
        st.session_state.page_number -= 1

# Background layout with side image
def side_by_side_image(image_path):
    col1, col2 = st.columns([1, 2])
    with col1:
        if os.path.exists(image_path):
            st.image(image_path, use_column_width=True)
        else:
            st.warning(f"‡∞ö‡∞ø‡∞§‡±ç‡∞∞‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞≤‡±ä‡∞ï‡±á‡∞ü‡±ç ‡∞ö‡±á‡∞Ø‡∞≤‡±á‡∞ï‡∞™‡±ã‡∞Ø‡∞æ‡∞Ç: {image_path}")
    return col2

# Pages
def welcome_page():
    col = side_by_side_image("front_image.jpg")
    with col:
        st.markdown("<h1 style='color:#4a148c;'>üåæ ‡∞™‡∞≤‡±ç‡∞≤‡±Ü ‡∞Æ‡∞æ‡∞ü‡∞≤‡±Å üåæ</h1>", unsafe_allow_html=True)
        st.markdown("<h3 style='background-color:#fff3e0; padding:10px;'>‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£ ‡∞™‡∞¶‡∞æ‡∞≤‡±Å, ‡∞∏‡∞æ‡∞Æ‡±Ü‡∞§‡∞≤‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞™‡±ä‡∞°‡±Å‡∞™‡±Å‡∞ï‡∞•‡∞≤ ‡∞Æ‡∞ú‡∞ø‡∞≤‡±Ä‡∞ï‡∞ø ‡∞∏‡±ç‡∞µ‡∞æ‡∞ó‡∞§‡∞Ç!</h3>", unsafe_allow_html=True)
        st.session_state.name = st.text_input("‡∞Æ‡±Ä ‡∞™‡±á‡∞∞‡±Å:")
        st.session_state.place = st.text_input("‡∞Æ‡±Ä ‡∞ä‡∞∞‡±Å:")
        if st.button("‡∞Æ‡±Å‡∞Ç‡∞¶‡±Å‡∞ï‡±Å ‡∞™‡±ã‡∞¶‡∞æ‡∞Ç"):
            if st.session_state.name and st.session_state.place:
                next_page()
            else:
                st.warning("‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞™‡±á‡∞∞‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞ä‡∞∞‡±Å ‡∞®‡∞Æ‡±ã‡∞¶‡±Å ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø.")

def selection_page():
    col = side_by_side_image("second_image.jpg")
    with col:
        st.markdown(f"<h3 style='color:#4a148c;'>‡∞π‡∞≤‡±ã {st.session_state.name} ‡∞ó‡∞æ‡∞∞‡±Å ({st.session_state.place})!</h3>", unsafe_allow_html=True)
        st.session_state.type = st.radio("‡∞Æ‡±Ä‡∞ï‡±Å ‡∞è‡∞Æ‡∞ø ‡∞ö‡±Ç‡∞°‡∞æ‡∞≤‡∞®‡∞ø‡∞™‡∞ø‡∞∏‡±ç‡∞§‡±ã‡∞Ç‡∞¶‡∞ø?", ["‡∞∏‡∞æ‡∞Æ‡±Ü‡∞§‡∞≤‡±Å", "‡∞™‡±ä‡∞°‡±Å‡∞™‡±Å‡∞ï‡∞•‡∞≤‡±Å"], index=0)
        col1, col2 = st.columns(2)
        with col1:
            if st.button("‡∞µ‡±Ü‡∞®‡∞ï‡±ç‡∞ï‡∞ø"):
                prev_page()
        with col2:
            if st.button("‡∞§‡±Ü‡∞∞‡∞µ‡∞Ç‡∞°‡∞ø"):
                next_page()

def content_page():
    col = side_by_side_image("second_image.jpg")
    with col:
        st.markdown(f"<h2 style='color:#2e7d32;'>üìö {st.session_state.type}</h2>", unsafe_allow_html=True)
        if st.session_state.type == "‡∞∏‡∞æ‡∞Æ‡±Ü‡∞§‡∞≤‡±Å":
            st.markdown("- **‡∞ï‡∞æ‡∞ï‡∞ø‡∞ï‡∞ø ‡∞ï‡±á‡∞∞‡∞ø‡∞Ç‡∞§ ‡∞é‡∞Ç‡∞¶‡±Å‡∞ï‡∞Ç‡∞ü‡±á ‡∞Æ‡±á‡∞§ ‡∞ï‡∞®‡∞ø‡∞™‡∞ø‡∞Ç‡∞ö‡∞ø‡∞Ç‡∞¶‡∞ø.**  \n‡∞Ö‡∞∞‡±ç‡∞•‡∞Ç: ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞Ç ‡∞≤‡±á‡∞ï‡∞™‡±ã‡∞Ø‡∞ø‡∞®‡∞æ ‡∞â‡∞§‡±ç‡∞∏‡∞æ‡∞π‡∞Ç‡∞ó‡∞æ ‡∞â‡∞Ç‡∞°‡∞ü‡∞Ç.")
            st.markdown("- **‡∞ö‡±Ü‡∞ü‡±ç‡∞ü‡±Å ‡∞Æ‡±Ä‡∞¶ ‡∞¨‡∞Ç‡∞°‡∞≤‡±Å ‡∞µ‡±á‡∞∏‡∞ø‡∞®‡∞ü‡±ç‡∞ü‡±Å.**  \n‡∞Ö‡∞∞‡±ç‡∞•‡∞Ç: ‡∞í‡∞ï‡∞∞‡±Å ‡∞µ‡∞ø‡∞®‡∞∞‡∞®‡∞ø ‡∞µ‡±ç‡∞Ø‡∞ï‡±ç‡∞§‡∞ø‡∞®‡∞ø ‡∞ï‡±ã‡∞∞‡∞ü‡∞Ç ‡∞µ‡±É‡∞•‡∞æ.")
            st.markdown("- **‡∞Ö‡∞∞‡∞ö‡±á‡∞§‡∞ø‡∞§‡±ã ‡∞®‡±Ü‡∞Ø‡±ç‡∞Ø‡∞ø ‡∞Æ‡∞ø‡∞Ç‡∞ó‡∞≤‡±á‡∞∞‡±Å.**  \n‡∞Ö‡∞∞‡±ç‡∞•‡∞Ç: ‡∞Ö‡∞∏‡∞æ‡∞ß‡±ç‡∞Ø‡∞Æ‡±à‡∞® ‡∞™‡∞®‡∞ø‡∞ï‡∞ø ‡∞™‡±ç‡∞∞‡∞Ø‡∞§‡±ç‡∞®‡∞ø‡∞Ç‡∞ö‡∞ü‡∞Ç.")

        elif st.session_state.type == "‡∞™‡±ä‡∞°‡±Å‡∞™‡±Å‡∞ï‡∞•‡∞≤‡±Å":
            riddles = [
                {"question": "‡∞µ‡±á‡∞∏‡∞µ‡∞ø ‡∞§‡∞æ‡∞™‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞§‡∞ü‡±ç‡∞ü‡±Å‡∞ï‡±Å‡∞®‡∞ø ‡∞ö‡∞≤‡∞ø‡∞≤‡±ã ‡∞ï‡∞¶‡∞ø‡∞≤‡±á ‡∞µ‡∞æ‡∞°‡±Å ‡∞é‡∞µ‡∞∞‡±Å?", "answer": "‡∞ö‡±Ü‡∞ï‡±ç‡∞ï"},
                {"question": "‡∞®‡∞æ‡∞ï‡±ä‡∞ï ‡∞ï‡∞®‡±ç‡∞®‡±Å, ‡∞ï‡∞æ‡∞≤‡±á‡∞¶‡±Å ‡∞®‡∞°‡∞µ‡∞ü‡∞Ç, ‡∞Æ‡∞æ‡∞ü‡±ç‡∞≤‡∞æ‡∞°‡∞§‡∞æ‡∞®‡±Å ‚Äì ‡∞®‡±á‡∞®‡±Å ‡∞é‡∞µ‡∞∞‡±Å?", "answer": "‡∞∞‡±á‡∞°‡∞ø‡∞Ø‡±ã"},
                {"question": "‡∞§‡∞® ‡∞ä‡∞∞‡∞ø‡∞®‡∞ø ‡∞µ‡∞¶‡∞≤‡∞ï‡±Å‡∞Ç‡∞°‡∞æ ‡∞®‡∞≤‡±Å‡∞ó‡±Å‡∞∞‡∞ø‡∞ï‡∞ø ‡∞§‡∞ø‡∞Ç‡∞°‡∞ø ‡∞™‡±Ü‡∞°‡∞§‡∞æ‡∞°‡±Å ‚Äì ‡∞é‡∞µ‡∞∞‡±Å?", "answer": "‡∞ö‡∞ø‡∞Æ‡±ç‡∞Æ‡∞ü"}
            ]
            for idx, riddle in enumerate(riddles, 1):
                st.markdown(f"**‡∞™‡±ä‡∞°‡±Å‡∞™‡±Å‡∞ï‡∞• {idx}:** {riddle['question']}")
                user_answer = st.text_input(f"‡∞Æ‡±Ä ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞Ç {idx}:", key=f"riddle_{idx}")
                if user_answer:
                    if user_answer.strip() == riddle["answer"]:
                        st.success("‡∞¨‡∞æ‡∞ó‡±Å‡∞Ç‡∞¶‡∞ø! ‡∞∏‡∞∞‡±à‡∞® ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞Ç üéâ")
                    else:
                        st.error(f"‡∞§‡∞™‡±ç‡∞™‡±Å ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞Ç. ‡∞∏‡∞∞‡±à‡∞®‡∞¶‡∞ø: {riddle['answer']}")

        col1, col2 = st.columns(2)
        with col1:
            if st.button("‡∞µ‡±Ü‡∞®‡∞ï‡±ç‡∞ï‡∞ø"):
                prev_page()
        with col2:
            if st.button("‡∞Æ‡±Ä ‡∞Æ‡∞æ‡∞ü ‡∞ö‡±Ü‡∞™‡±ç‡∞™‡∞Ç‡∞°‡∞ø"):
                next_page()

def feedback_page():
    col = side_by_side_image("second_image.jpg")
    with col:
        st.markdown("<h2 style='color:#6a1b9a;'>üôè ‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞æ‡∞≤‡±Å!</h2>", unsafe_allow_html=True)
        st.markdown("‡∞Æ‡±Ä‡∞∞‡±Å '‡∞™‡∞≤‡±ç‡∞≤‡±Ü ‡∞Æ‡∞æ‡∞ü‡∞≤‡±Å' ‡∞Ø‡∞æ‡∞™‡±ç‚Äå‡∞®‡∞ø ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞ø‡∞Ç‡∞ö‡∞ø‡∞®‡∞Ç‡∞¶‡±Å‡∞ï‡±Å ‡∞ö‡∞æ‡∞≤‡∞æ ‡∞Ü‡∞®‡∞Ç‡∞¶‡∞Ç‡∞ó‡∞æ ‡∞â‡∞Ç‡∞¶‡∞ø.")
        feedback = st.text_area("‡∞Æ‡±Ä ‡∞Ö‡∞≠‡∞ø‡∞™‡±ç‡∞∞‡∞æ‡∞Ø‡∞Ç / ‡∞ï‡±ä‡∞§‡±ç‡∞§ ‡∞∏‡∞æ‡∞Æ‡±Ü‡∞§ ‡∞≤‡±á‡∞¶‡∞æ ‡∞™‡±ä‡∞°‡±Å‡∞™‡±Å‡∞ï‡∞•‡∞®‡±Å ‡∞á‡∞ï‡±ç‡∞ï‡∞° ‡∞®‡∞Æ‡±ã‡∞¶‡±Å ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø:")
        if st.button("‡∞™‡∞Ç‡∞™‡∞Ç‡∞°‡∞ø"):
            st.success("‡∞Æ‡±Ä ‡∞Ö‡∞≠‡∞ø‡∞™‡±ç‡∞∞‡∞æ‡∞Ø‡∞Ç ‡∞™‡∞Ç‡∞™‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø. ‡∞ß‡∞®‡±ç‡∞Ø‡∞µ‡∞æ‡∞¶‡∞æ‡∞≤‡±Å! üôè")
        st.image("second_image.jpg", caption="‡∞Æ‡∞≥‡±ç‡∞≥‡±Ä ‡∞ï‡∞≤‡±Å‡∞¶‡±ç‡∞¶‡∞æ‡∞Ç!", use_column_width=False)
        if st.button("‡∞µ‡±Ü‡∞®‡∞ï‡±ç‡∞ï‡∞ø"):
            prev_page()

# Page Routing
pages = [welcome_page, selection_page, content_page, feedback_page]
pages[st.session_state.page_number]()
