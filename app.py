import streamlit as st
import os
import pandas as pd
from datetime import datetime

st.set_page_config(page_title="‡∞™‡∞≤‡±ç‡∞≤‡±Ü ‡∞Æ‡∞æ‡∞ü‡∞≤‡±Å", page_icon="üåæ", layout="centered")
st.title("üåæ ‡∞™‡∞≤‡±ç‡∞≤‡±Ü ‡∞Æ‡∞æ‡∞ü‡∞≤‡±Å ‚Äì ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å‡∞µ‡∞æ‡∞∞‡∞ø ‡∞∏‡∞æ‡∞Æ‡±Ü‡∞§‡∞≤ ‡∞ï‡±ã‡∞∂‡∞Ç")
st.markdown("‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£ ‡∞ó‡±ç‡∞∞‡∞æ‡∞Æ‡±Ä‡∞£‡±Å‡∞≤ ‡∞Æ‡∞æ‡∞ü‡∞≤‡±Å, ‡∞∏‡∞æ‡∞Æ‡±Ü‡∞§‡∞≤‡±Å, ‡∞ï‡∞•‡∞≤‡±Å ‚Äî ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞ö‡±Ü‡∞™‡±ç‡∞™‡∞Ç‡∞°‡∞ø, ‡∞Æ‡∞®‡∞Ç ‡∞ï‡∞æ‡∞™‡∞æ‡∞°‡±Å‡∞ï‡±Å‡∞Ç‡∞¶‡∞æ‡∞Ç!")

# File paths
DATA_FILE = "palle_matala_data.csv"
UPLOAD_FOLDER = "uploads"
if not os.path.exists(UPLOAD_FOLDER):
    os.makedirs(UPLOAD_FOLDER)

# Default entries (5 proverbs)
default_entries = [
    {
        "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "proverb": "‡∞Ö‡∞µ‡±ç‡∞µ ‡∞ö‡±Ü‡∞™‡±ç‡∞™‡∞ø‡∞® ‡∞Æ‡∞æ‡∞ü ‡∞Ö‡∞ï‡±ç‡∞ï‡∞ø‡∞∞‡∞æ‡∞ú‡±Å ‡∞ï‡∞Ç‡∞ü‡±á ‡∞Æ‡±á‡∞≤‡±Å",
        "meaning": "‡∞µ‡±É‡∞¶‡±ç‡∞ß‡±Å‡∞≤ ‡∞Ö‡∞®‡±Å‡∞≠‡∞µ‡∞Ç ‡∞™‡∞¶‡∞ø‡∞™‡±Å‡∞∏‡±ç‡∞§‡∞ï‡∞æ‡∞≤‡∞®‡±Å ‡∞Æ‡∞ø‡∞Ç‡∞ö‡∞ø‡∞®‡∞¶‡∞ø.",
        "usage": "‡∞™‡±Ü‡∞≥‡±ç‡∞≤‡∞ø‡∞≥‡±ç‡∞≤ ‡∞µ‡±ç‡∞Ø‡∞µ‡∞π‡∞æ‡∞∞‡∞æ‡∞≤‡±ç‡∞≤‡±ã ‡∞™‡±Ü‡∞¶‡±ç‡∞¶‡∞≤ ‡∞Æ‡∞æ‡∞ü ‡∞µ‡∞ø‡∞®‡∞°‡∞Æ‡±á ‡∞Æ‡±á‡∞≤‡±Å ‡∞Ö‡∞Ç‡∞ü‡∞æ‡∞∞‡±Å.",
        "extra_story": "",
        "audio_path": ""
    },
    {
        "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "proverb": "‡∞™‡±Å‡∞≤‡∞ø ‡∞ï‡∞®‡∞ø‡∞™‡∞ø‡∞Ç‡∞ö‡∞ï ‡∞Æ‡±Å‡∞Ç‡∞¶‡±á ‡∞¨‡∞≤‡±ç‡∞≤‡±Ü‡∞Ç ‡∞§‡±Ü‡∞Ç‡∞™‡∞æ‡∞°‡±Å",
        "meaning": "‡∞∏‡∞Æ‡∞∏‡±ç‡∞Ø ‡∞∞‡∞æ‡∞ï‡∞Æ‡±Å‡∞Ç‡∞¶‡±á ‡∞™‡∞∞‡∞ø‡∞∑‡±ç‡∞ï‡∞æ‡∞∞‡∞Ç ‡∞µ‡±Ü‡∞§‡∞ï‡∞°‡∞Ç.",
        "usage": "‡∞∞‡∞æ‡∞Æ‡±Å ‡∞é‡∞≤‡±ç‡∞≤‡∞™‡±ç‡∞™‡±Å‡∞°‡±Ç ‡∞Æ‡±Å‡∞Ç‡∞¶‡±á ‡∞™‡±ç‡∞≤‡∞æ‡∞®‡±ç ‡∞ö‡±á‡∞∏‡±Å‡∞ï‡±Å‡∞Ç‡∞ü‡∞æ‡∞°‡±Å.",
        "extra_story": "",
        "audio_path": ""
    },
    {
        "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "proverb": "‡∞é‡∞¶‡±ç‡∞¶‡±Å ‡∞ó‡∞°‡±ç‡∞°‡∞ø ‡∞§‡∞ø‡∞Ç‡∞ü‡±Å‡∞Ç‡∞¶‡±ã ‡∞≤‡±á‡∞¶‡±ã, ‡∞™‡∞ø‡∞ü‡±ç‡∞ü ‡∞ó‡∞æ‡∞≤‡∞ø‡∞ï‡∞ø ‡∞µ‡∞£‡∞ø‡∞ï‡∞ø‡∞Ç‡∞¶‡∞ø",
        "meaning": "‡∞µ‡∞ö‡±ç‡∞ö‡±á ‡∞∏‡∞Æ‡∞∏‡±ç‡∞Ø‡∞ï‡∞Ç‡∞ü‡±á ‡∞Æ‡±Å‡∞Ç‡∞¶‡±á ‡∞≠‡∞Ø‡∞™‡∞°‡∞ü‡∞Ç.",
        "usage": "‡∞®‡±Ä‡∞µ‡±Ü‡∞Ç‡∞¶‡±Å‡∞ï‡±Å ‡∞ü‡±Ü‡∞®‡±ç‡∞∑‡∞®‡±ç ‡∞™‡∞°‡±Å‡∞§‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞µ‡±Å?",
        "extra_story": "",
        "audio_path": ""
    },
    {
        "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "proverb": "‡∞µ‡∞∞‡±ç‡∞∑‡∞Ç ‡∞ï‡±Å‡∞∞‡∞ø‡∞∏‡±ç‡∞§‡±á, ‡∞ï‡∞™‡±ç‡∞™ ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á ‡∞ï‡∞æ‡∞ï‡±Å‡∞Ç‡∞°‡∞æ ‡∞®‡∞Ç‡∞¶‡∞ø ‡∞ï‡±Ç‡∞°‡∞æ ‡∞Ü‡∞®‡∞Ç‡∞¶‡∞ø‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø",
        "meaning": "‡∞í‡∞ï ‡∞Æ‡∞Ç‡∞ö‡∞ø ‡∞™‡∞®‡∞ø ‡∞µ‡∞≤‡±ç‡∞≤ ‡∞Ö‡∞Ç‡∞¶‡∞∞‡∞ø‡∞ï‡±Ä ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞Ç.",
        "usage": "‡∞ó‡±ç‡∞∞‡∞Ç‡∞•‡∞æ‡∞≤‡∞Ø‡∞Ç ‡∞µ‡∞≤‡±ç‡∞≤ ‡∞™‡±ç‡∞∞‡∞§‡∞ø ‡∞µ‡∞ø‡∞¶‡±ç‡∞Ø‡∞æ‡∞∞‡±ç‡∞•‡∞ø‡∞ï‡∞ø ‡∞â‡∞™‡∞Ø‡±ã‡∞ó‡∞Ç.",
        "extra_story": "",
        "audio_path": ""
    },
    {
        "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "proverb": "‡∞ï‡±ã‡∞Ø‡∞ø‡∞≤ ‡∞ï‡±Ç‡∞∏‡±ç‡∞§‡±á ‡∞ï‡∞æ‡∞≤‡∞Ç ‡∞Æ‡∞æ‡∞∞‡∞ø‡∞Ç‡∞¶‡∞ø",
        "meaning": "‡∞ö‡±Å‡∞ü‡±ç‡∞ü‡±Ç ‡∞™‡∞∞‡∞ø‡∞∏‡±ç‡∞•‡∞ø‡∞§‡±Å‡∞≤‡±Å ‡∞Æ‡∞æ‡∞∞‡∞°‡∞Ç.",
        "usage": "‡∞á‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å ‡∞™‡∞ø‡∞≤‡±ç‡∞≤‡∞≤‡±Å ‡∞ï‡±Ç‡∞°‡∞æ ‡∞™‡∞≤‡±ç‡∞≤‡±Ü ‡∞Æ‡∞æ‡∞ü‡∞≤‡±Å ‡∞®‡±á‡∞∞‡±ç‡∞ö‡±Å‡∞ï‡±Å‡∞Ç‡∞ü‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞∞‡±Å!",
        "extra_story": "",
        "audio_path": ""
    }
]

# Load or initialize data
if not os.path.exists(DATA_FILE):
    df = pd.DataFrame(default_entries)
    df.to_csv(DATA_FILE, index=False)
else:
    df = pd.read_csv(DATA_FILE)

# Show proverbs
st.subheader("üìö ‡∞á‡∞™‡±ç‡∞™‡∞ü‡∞ø‡∞ï‡±á ‡∞∏‡∞Æ‡∞∞‡±ç‡∞™‡∞ø‡∞Ç‡∞ö‡∞ø‡∞® ‡∞™‡∞≤‡±ç‡∞≤‡±Ü ‡∞Æ‡∞æ‡∞ü‡∞≤‡±Å")
for index, row in df[::-1].iterrows():
    st.markdown(f"### üó£Ô∏è {row['proverb']}")
    st.markdown(f"**üí° ‡∞Ö‡∞∞‡±ç‡∞•‡∞Ç:** {row['meaning']}")
    st.markdown(f"**üìò ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£:** _{row['usage']}_")
    
    if pd.notna(row['extra_story']) and row['extra_story'].strip():
        st.markdown(f"**üìñ ‡∞á‡∞Ç‡∞ï‡±ä‡∞ï ‡∞Æ‡∞æ‡∞ü ‡∞≤‡±á‡∞¶‡∞æ ‡∞ï‡∞•:** {row['extra_story']}")

    if pd.notna(row['audio_path']) and os.path.exists(row['audio_path']):
        st.audio(row['audio_path'])

    st.markdown("---")

# Ask user if they want to contribute
st.subheader("üì• ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞ï‡±Ç‡∞°‡∞æ ‡∞ö‡±á‡∞∞‡±ç‡∞ö‡∞æ‡∞≤‡∞®‡±Å‡∞ï‡±Å‡∞Ç‡∞ü‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞∞‡∞æ?")
if st.checkbox("üëç ‡∞Ö‡∞µ‡±Å‡∞®‡±Å, ‡∞®‡±á‡∞®‡±Å ‡∞∏‡∞æ‡∞Æ‡±Ü‡∞§ ‡∞ö‡±á‡∞∞‡±ç‡∞ö‡∞æ‡∞≤‡∞®‡±Å‡∞ï‡±Å‡∞Ç‡∞ü‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞®‡±Å"):
    with st.form("submit_form"):
        st.subheader("üìù ‡∞Æ‡±Ä ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç ‡∞∏‡∞Æ‡∞∞‡±ç‡∞™‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø")

        proverb = st.text_input("üëâ ‡∞∏‡∞æ‡∞Æ‡±Ü‡∞§ / ‡∞Æ‡∞æ‡∞ü")
        meaning = st.text_area("üí° ‡∞Ö‡∞∞‡±ç‡∞•‡∞Ç")
        usage = st.text_area("üìò ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£ ‡∞µ‡∞æ‡∞ï‡±ç‡∞Ø‡∞Ç")

        extra_story = st.text_area("üìñ ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞ö‡±Ü‡∞™‡±ç‡∞™‡∞æ‡∞≤‡∞®‡±Å‡∞ï‡±Å‡∞®‡±á ‡∞Æ‡∞∞‡±ã ‡∞∏‡∞æ‡∞Æ‡±Ü‡∞§ ‡∞≤‡±á‡∞¶‡∞æ ‡∞ï‡∞• (‡∞ê‡∞ö‡±ç‡∞õ‡∞ø‡∞ï‡∞Ç)", placeholder="‡∞á‡∞ï‡±ç‡∞ï‡∞° ‡∞ü‡±à‡∞™‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø...")
        audio_file = st.file_uploader("üîä ‡∞â‡∞ö‡±ç‡∞õ‡∞æ‡∞∞‡∞£ ‡∞´‡±à‡∞≤‡±ç (‡∞ê‡∞ö‡±ç‡∞õ‡∞ø‡∞ï‡∞Ç - .mp3 / .wav)", type=["mp3", "wav"])

        submitted = st.form_submit_button("‚úÖ ‡∞∏‡∞Æ‡∞∞‡±ç‡∞™‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø")

        if submitted:
            if proverb.strip() == "" or meaning.strip() == "" or usage.strip() == "":
                st.warning("‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø ‡∞∏‡∞æ‡∞Æ‡±Ü‡∞§, ‡∞Ö‡∞∞‡±ç‡∞•‡∞Ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞â‡∞¶‡∞æ‡∞π‡∞∞‡∞£ ‡∞§‡∞™‡±ç‡∞™‡∞®‡∞ø‡∞∏‡∞∞‡∞ø‡∞ó‡∞æ ‡∞®‡∞Æ‡±ã‡∞¶‡±Å ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø.")
            else:
                # Save audio
                audio_filename = ""
                if audio_file is not None:
                    timestamp = datetime.now().strftime("%Y%m%d%H%M%S")
                    audio_filename = f"{UPLOAD_FOLDER}/{timestamp}_{audio_file.name}"
                    with open(audio_filename, "wb") as f:
                        f.write(audio_file.read())

                new_data = {
                    "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
                    "proverb": proverb,
                    "meaning": meaning,
                    "usage": usage,
                    "extra_story": extra_story,
                    "audio_path": audio_filename
                }

                df = pd.concat([df, pd.DataFrame([new_data])], ignore_index=True)
                df.to_csv(DATA_FILE, index=False)
                st.success("ü•≥ ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞™‡∞Ç‡∞™‡∞ø‡∞® ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç ‡∞µ‡∞ø‡∞ú‡∞Ø‡∞µ‡∞Ç‡∞§‡∞Ç‡∞ó‡∞æ ‡∞®‡∞Æ‡±ã‡∞¶‡±Å ‡∞ö‡±á‡∞Ø‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø!")
